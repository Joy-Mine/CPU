.data
.text
	lui $1, 0xFFFF
	ori $28, $1, 0xF000
	
	addi $17, $0,0
	addi $18, $0, 1
	addi $19, $0, 2
	addi $20, $0, 3
	addi $21, $0, 4
	addi $22, $0, 5
	addi $23, $0, 6
	addi $24, $0, 7
	
loop:
	lw $10, 0xC50($28)	#确定输入的单独拨码开关
	beq $10, $18, execute	#确定一次输入
	j loop
	
execute:
	lw $1, 0xc70($28)	#拨码开关输入样例编号
	beq $1, $17, q0		#000
	beq $1, $18, q1		#001
	beq $1, $19, q2		#010
	beq $1, $20, q3		#011
	beq $1, $21, q4 	#100
	beq $1, $22, q5		#101
	beq $1, $23, q6		#110
	beq $1, $24, q7 	#111
	j loop

q0:
	lw $10, 0xC55($28)	#另一个确定输入的单独拨码开关
	beqz $10, q0		#等待确定输入
	lw $10, 0xC70($28)	#拨码开关输入样例输入
	sw $10, 0xC60($28)	#led对应内存地址
	#接下来判断是否为二的幂，答案存进$11
	add $25, $0, $0	#计数二进制下有几个1
	add $26, $0, $0	#循环计数
q02:	and $27, $10, $18
	add $25, $25, $27
	srl $10, $10, 1
	addi $26, $26, 1
	bne $26, 32, q02
	slt $11, $25, $19
	sw $11, 0xC65($28)	#另一个led灯
	j loop

q1:
	lw $10, 0xC55($28)	#另一个确定输入的单独拨码开关
	beqz $10, q1		#等待确定输入
	lw $10, 0xC70($28)	#拨码开关输入样例输入
	sw $10, 0xC60($28)	#led对应内存地址
	#接下来判断是否为奇数，答案存进$11
	and $10, $10, $18	#判断最低比特位就行
	slt $10, $10, $18
	not $10,$10
	sw $11, 0xC65($28)	#另一个led灯
	j loop

q2:
	lw $10, 0xC55($28)	#另一个确定输入的单独拨码开关
	beqz $10, q2		#等待确定输入
	lw $15, 0xC70($28)	#拨码开关输入样例输入a
q22:	lw $11, 0xC58($28)	#第三个确定输入的单独拨码开关
	beqz $11, q22		#等待确定输入
	lw $16, 0xC70($28)	#拨码开关输入样例输入b
	sw $15, 0xC60($28)	#led显示a
	sw $16, 0xC65($28)	#led显示b
	#接下来计算a和b的按位或，答案存在$12
	or $12, $15, $16
	sw $12, 0xC68($28)	#第三个led灯显示运算结果
	j loop
	
q3:
	lw $10, 0xC55($28)	#另一个确定输入的单独拨码开关
	beqz $10, q3		#等待确定输入
	lw $15, 0xC70($28)	#拨码开关输入样例输入a
q32:	lw $11, 0xC58($28)	#第三个确定输入的单独拨码开关
	beqz $11, q32		#等待确定输入
	lw $16, 0xC70($28)	#拨码开关输入样例输入b
	sw $15, 0xC60($28)	#led显示a
	sw $16, 0xC65($28)	#led显示b
	#接下来计算a和b的按位或非，答案存在$12
	nor $12, $15, $16
	sw $12, 0xC68($28)	#第三个led灯显示运算结果
	j loop	

q4:
	lw $10, 0xC55($28)	#另一个确定输入的单独拨码开关
	beqz $10, q4		#等待确定输入
	lw $15, 0xC70($28)	#拨码开关输入样例输入a
q42:	lw $11, 0xC58($28)	#第三个确定输入的单独拨码开关
	beqz $11, q42		#等待确定输入
	lw $16, 0xC70($28)	#拨码开关输入样例输入b
	sw $15, 0xC60($28)	#led显示a
	sw $16, 0xC65($28)	#led显示b
	#接下来计算a和b的按位异或，答案存在$12
	xor $12, $15, $16
	sw $12, 0xC68($28)	#第三个led灯显示运算结果
	j loop

q5:
	lw $10, 0xC55($28)	#另一个确定输入的单独拨码开关
	beqz $10, q5		#等待确定输入
	lw $15, 0xC70($28)	#拨码开关输入样例输入a
q52:	lw $11, 0xC58($28)	#第三个确定输入的单独拨码开关
	beqz $11, q52		#等待确定输入
	lw $16, 0xC70($28)	#拨码开关输入样例输入b
	sw $15, 0xC60($28)	#led显示a
	sw $16, 0xC65($28)	#led显示b
	#接下来slt比较大小，答案存在$12
	slt $12, $15, $16
	sw $12, 0xC68($28)	#第三个led灯显示运算结果
	j loop
	
q6:
	lw $10, 0xC55($28)	#另一个确定输入的单独拨码开关
	beqz $10, q6		#等待确定输入
	lw $15, 0xC70($28)	#拨码开关输入样例输入a
q62:	lw $11, 0xC58($28)	#第三个确定输入的单独拨码开关
	beqz $11, q62		#等待确定输入
	lw $16, 0xC70($28)	#拨码开关输入样例输入b
	sw $15, 0xC60($28)	#led显示a
	sw $16, 0xC65($28)	#led显示b
	#接下来sltu按照无符号数比较大小，答案存在$12
	sltu $12, $15, $16
	sw $12, 0xC68($28)	#第三个led灯显示运算结果
	j loop

q7:
	lw $10, 0xC55($28)	#另一个确定输入的单独拨码开关
	beqz $10, q7		#等待确定输入
	lw $15, 0xC70($28)	#拨码开关输入样例输入a
q72:	lw $11, 0xC58($28)	#第三个确定输入的单独拨码开关
	beqz $11, q72		#等待确定输入
	lw $16, 0xC70($28)	#拨码开关输入样例输入b
	sw $15, 0xC60($28)	#led显示a
	sw $16, 0xC65($28)	#led显示b
	j loop
