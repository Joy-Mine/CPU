.data 
.text 
main:
	lui $1, 0xFFFF
	ori $28, $1, 0xF000
	
#	addi $17, $0,0
	#addi $18, $0, 1
#	addi $19, $0, 2
#	addi $20, $0, 3
#	addi $21, $0, 4
#	addi $22, $0, 5
#	addi $23, $0, 6
#	addi $24, $0, 7
	
loop:
	addi $18, $0, 4	#100
	lw $10, 0xC40($28)	#确定输入的单独拨码开关(100)
	beq $10, $18, execute	#确定一次输入
	j loop
	
execute:
	lw $1, 0xC60($28)	#拨码开关输入样例编号
	beq $1, $0, q0		#000
	addi $18, $0, 1
	beq $1, $18, q1		#001
	addi $18, $18, 1
	beq $1, $18, q2		#010
	addi $18, $18, 1
	beq $1, $18, q3		#011
	addi $18, $18, 1
	beq $1, $18, q4 	#100
	addi $18, $18, 1
	beq $1, $18, q5		#101
	addi $18, $18, 1
	beq $1, $18, q6		#110
	addi $18, $18, 1
	beq $1, $18, q7 	#111
	j loop

q0:
	addi $18, $0, 2	#010
	lw $10, 0xC40($28)	#另一个确定输入的单独拨码开关(010)
	bne $10, $18, q0	#等待确定输入
	lw $10, 0xC60($28)	#拨码开关输入样例输入
	sw $10, 0xC80($28)	#数码管
	#接下来判断是否为二的幂，答案存进$11
	add $25, $0, $0	#计数二进制下有几个1
	add $26, $0, $0	#循环计数
q02:	and $27, $10, $18
	add $25, $25, $27
	srl $10, $10, 1
	addi $26, $26, 1
	addi $18,$0,32
	bne $26, $18, q02
	slt $11, $25, $18
	sw $11, 0xC64($28)	#led灯（001）
	j loop

q1:
	addi $18, $0, 2 #010
	lw $10, 0xC40($28)	#另一个确定输入的单独拨码开关
	bne $10, $18, q1	#等待确定输入
	lw $10, 0xC60($28)	#拨码开关输入样例输入
	sw $10, 0xC80($28)	#数码管
	#接下来判断是否为奇数，答案存进$11
	addi $18, $0, 1
	and $10, $10, $18	#判断最低比特位就行
	slt $10, $10, $18
	sub $10,$18,$10
	sw $10, 0xC64($28)	#led灯（001）
	j loop

q2:
	addi $18, $0, 2 #010
	lw $10, 0xC40($28)	#另一个确定输入的单独拨码开关
	bne $18,$10, q2		#等待确定输入
	lw $15, 0xC60($28)	#拨码开关输入样例输入a
q22:	addi $18, $0, 1 #100
	lw $11, 0xC40($28)	#第三个确定输入的单独拨码开关
	bne $18,$11, q22	#等待确定输入
	lw $16, 0xC60($28)	#拨码开关输入样例输入b
	sll $17, $15, 4
	add $17, $17, $16
	sw $17, 0xC80($28)	#数码管显示a 和 b
#	sw $16, 0xC84($28)	#led显示b
	#接下来计算a和b的按位或，答案存在$12
	or $12, $15, $16
	sll $17, $17, 4
	add $17,$17, $12
	sw $17, 0xC80($28)	#数码管显示 a b 运算结果
	j loop
	
q3:
	addi $18, $0, 2 #010
	lw $10, 0xC40($28)	#另一个确定输入的单独拨码开关
	bne $18, $10, q3	#等待确定输入
	lw $15, 0xC60($28)	#拨码开关输入样例输入a
q32:	addi $18, $0, 1 #100
	lw $11, 0xC40($28)	#第三个确定输入的单独拨码开关
	bne $18, $11, q32	#等待确定输入
	lw $16, 0xC60($28)	#拨码开关输入样例输入b
	sll $17, $15, 4
	add $17, $17, $16
	sw $17, 0xC80($28)	#数码管显示a和b
#	sw $16, 0xC84($28)	#led显示b
	#接下来计算a和b的按位或非，答案存在$12
	nor $12, $15, $16
	sll $17, $17, 4
	add $17, $17, $12
	sw $17, 0xC80($28)	#数码管显示 a b 运算结果
	j loop	

q4:
	addi $18, $0, 2 #010
	lw  $10, 0xC40($28)	#另一个确定输入的单独拨码开关
	bne $18, $10, q4		#等待确定输入
	lw $15, 0xC60($28)	#拨码开关输入样例输入a
q42:	addi $18, $0, 1 #100
	lw $11, 0xC40($28)	#第三个确定输入的单独拨码开关
	bne $18, $11, q42	#等待确定输入
	lw $16, 0xC60($28)	#拨码开关输入样例输入b
	sll $17, $15, 4
	add $17, $17, $16
	sw $17, 0xC80($28)	#数码管显示a和b
#	sw $16, 0xC84($28)	#led显示b
	#接下来计算a和b的按位异或，答案存在$12
	xor $12, $15, $16
	sll $17, $17, 4
	add $17, $17, $12
	sw $17, 0xC80($28)	#数码管显示三个数
	j loop

q5:
	addi $18, $0, 2 #010
	lw  $10, 0xC40($28)	#另一个确定输入的单独拨码开关
	bne $18, $10, q5	#等待确定输入
	lw $15, 0xC60($28)	#拨码开关输入样例输入a
q52:	addi $18, $0, 1 #100
	lw $11, 0xC40($28)	#第三个确定输入的单独拨码开关
	bne $18, $11, q52	#等待确定输入
	lw $16, 0xC60($28)	#拨码开关输入样例输入b
	sll $17, $15, 4
	add $17, $17, $16
	sw $17, 0xC80($28)	#数码管显示a和b
#	sw $16, 0xC84($28)	#led显示b
	#接下来slt比较大小，答案存在$12
	sll $15, $15, 24
	sra $15, $15, 24
	sll $16, $16, 24
	sra $16, $16, 24
	slt $12, $15, $16
	sll $17, $17, 4
	add $17, $17, $12
	sw $12, 0xC64($28)	#led存结果
	sw $17, 0xC80($28)	#数码管显示三个数
	j loop
	
q6:
	addi $18, $0, 2 #010
	lw  $10, 0xC40($28)	#另一个确定输入的单独拨码开关
	bne $18,$10, q6		#等待确定输入
	lw $15, 0xC60($28)	#拨码开关输入样例输入a
q62:	addi $18, $0, 1 #100
	lw $11, 0xC40($28)	#第三个确定输入的单独拨码开关
	bne $18, $11, q62	#等待确定输入
	lw $16, 0xC60($28)	#拨码开关输入样例输入b
	sll $17, $15, 4
	add $17, $17, $16
	sw $17, 0xC80($28)	#数码管显示两个
#	sw $16, 0xC84($28)	#led显示b
	#接下来sltu按照无符号数比较大小，答案存在$12
	sltu $12, $15, $16
	sll $17, $17, 4
	add $17, $17, $12
	sw $12, 0xC64($28)	#led存结果
	sw $17, 0xC80($28)	#第三个led灯显示运算结果
	j loop

q7:
	addi $18, $0, 2 #010
	lw  $10, 0xC40($28)	#另一个确定输入的单独拨码开关
	bne $18, $10, q7		#等待确定输入
	lw $15, 0xC60($28)	#拨码开关输入样例输入a
q72:	addi $18, $0, 1 #100
	lw $11, 0xC40($28)	#第三个确定输入的单独拨码开关
	bne $18, $11, q72	#等待确定输入
	lw $16, 0xC60($28)	#拨码开关输入样例输入b
	sll $17, $15, 4
	add $17, $17, $16
	sw $17, 0xC80($28)	#数码管显示a 和 b
#	sw $16, 0xC84($28)	#led显示b
	j loop
